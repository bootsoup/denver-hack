{"abi":[{"type":"function","name":"toHexString","inputs":[{"name":"input","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"}],"bytecode":{"object":"0x61043961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c93727931461003a575b600080fd5b61004d61004836600461025a565b610063565b60405161005a919061030b565b60405180910390f35b60606001610074600260001961036f565b61007e9190610391565b82511061008a57600080fd5b81516f181899199a1a9b1b9c1cb0b131b232b360811b906000906100af9060026103aa565b6100ba9060026103c1565b67ffffffffffffffff8111156100d2576100d2610244565b6040519080825280601f01601f1916602001820160405280156100fc576020820181803683370190505b509050600360fc1b81600081518110610117576101176103d4565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610146576101466103d4565b60200101906001600160f81b031916908160001a905350835160029060005b81811015610239576000878281518110610181576101816103d4565b016020015160f881901c9150869060fc1c601081106101a2576101a26103d4565b1a60f81b85856101b1816103ea565b9650815181106101c3576101c36103d4565b60200101906001600160f81b031916908160001a9053508581600f16601081106101ef576101ef6103d4565b1a60f81b85856101fe816103ea565b965081518110610210576102106103d4565b60200101906001600160f81b031916908160001a9053505080610232906103ea565b9050610165565b509195945050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561026c57600080fd5b813567ffffffffffffffff8082111561028457600080fd5b818401915084601f83011261029857600080fd5b8135818111156102aa576102aa610244565b604051601f8201601f19908116603f011681019083821181831017156102d2576102d2610244565b816040528281528760208487010111156102eb57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103385785810183015185820160400152820161031c565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b60008261038c57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156103a4576103a4610359565b92915050565b80820281158282048414176103a4576103a4610359565b808201808211156103a4576103a4610359565b634e487b7160e01b600052603260045260246000fd5b6000600182016103fc576103fc610359565b506001019056fea26469706673582212207e58aff919913652120c712e56ab5b3399880762f6a4b8be34bb433b86105cd564736f6c63430008150033","sourceMap":"25:882:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;25:882:26;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c93727931461003a575b600080fd5b61004d61004836600461025a565b610063565b60405161005a919061030b565b60405180910390f35b60606001610074600260001961036f565b61007e9190610391565b82511061008a57600080fd5b81516f181899199a1a9b1b9c1cb0b131b232b360811b906000906100af9060026103aa565b6100ba9060026103c1565b67ffffffffffffffff8111156100d2576100d2610244565b6040519080825280601f01601f1916602001820160405280156100fc576020820181803683370190505b509050600360fc1b81600081518110610117576101176103d4565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610146576101466103d4565b60200101906001600160f81b031916908160001a905350835160029060005b81811015610239576000878281518110610181576101816103d4565b016020015160f881901c9150869060fc1c601081106101a2576101a26103d4565b1a60f81b85856101b1816103ea565b9650815181106101c3576101c36103d4565b60200101906001600160f81b031916908160001a9053508581600f16601081106101ef576101ef6103d4565b1a60f81b85856101fe816103ea565b965081518110610210576102106103d4565b60200101906001600160f81b031916908160001a9053505080610232906103ea565b9050610165565b509195945050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561026c57600080fd5b813567ffffffffffffffff8082111561028457600080fd5b818401915084601f83011261029857600080fd5b8135818111156102aa576102aa610244565b604051601f8201601f19908116603f011681019083821181831017156102d2576102d2610244565b816040528281528760208487010111156102eb57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103385785810183015185820160400152820161031c565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b60008261038c57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156103a4576103a4610359565b92915050565b80820281158282048414176103a4576103a4610359565b808201808211156103a4576103a4610359565b634e487b7160e01b600052603260045260246000fd5b6000600182016103fc576103fc610359565b506001019056fea26469706673582212207e58aff919913652120c712e56ab5b3399880762f6a4b8be34bb433b86105cd564736f6c63430008150033","sourceMap":"25:882:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;291:614;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;353:13;425:1;401:21;421:1;-1:-1:-1;;401:21:26;:::i;:::-;:25;;;;:::i;:::-;386:5;:12;:40;378:49;;;;;;523:12;;-1:-1:-1;;;437:36:26;:15;;519:16;;:1;:16;:::i;:::-;:20;;538:1;519:20;:::i;:::-;509:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;509:31:26;;483:57;;-1:-1:-1;;;550:10:26;561:1;550:13;;;;;;;;:::i;:::-;;;;:19;-1:-1:-1;;;;;550:19:26;;;;;;;;;-1:-1:-1;;;579:10:26;590:1;579:13;;;;;;;;:::i;:::-;;;;:19;-1:-1:-1;;;;;579:19:26;;;;;;;;-1:-1:-1;648:12:26;;620:1;;609:8;670:194;691:6;687:1;:10;670:194;;;718:10;737:5;743:1;737:8;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;780:7:26;;788:10;;780:19;;;;;;;:::i;:::-;;;;760:10;771:5;;;;:::i;:::-;;;760:17;;;;;;;;:::i;:::-;;;;:39;-1:-1:-1;;;;;760:39:26;;;;;;;;;833:7;841:5;849:3;841:11;833:20;;;;;;;:::i;:::-;;;;813:10;824:5;;;;:::i;:::-;;;813:17;;;;;;;;:::i;:::-;;;;:40;-1:-1:-1;;;;;813:40:26;;;;;;;;;704:160;699:3;;;;:::i;:::-;;;670:194;;;-1:-1:-1;887:10:26;;291:614;-1:-1:-1;;;;;291:614:26:o;14:127:37:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:921;214:6;267:2;255:9;246:7;242:23;238:32;235:52;;;283:1;280;273:12;235:52;323:9;310:23;352:18;393:2;385:6;382:14;379:34;;;409:1;406;399:12;379:34;447:6;436:9;432:22;422:32;;492:7;485:4;481:2;477:13;473:27;463:55;;514:1;511;504:12;463:55;550:2;537:16;572:2;568;565:10;562:36;;;578:18;;:::i;:::-;653:2;647:9;621:2;707:13;;-1:-1:-1;;703:22:37;;;727:2;699:31;695:40;683:53;;;751:18;;;771:22;;;748:46;745:72;;;797:18;;:::i;:::-;837:10;833:2;826:22;872:2;864:6;857:18;912:7;907:2;902;898;894:11;890:20;887:33;884:53;;;933:1;930;923:12;884:53;989:2;984;980;976:11;971:2;963:6;959:15;946:46;1034:1;1012:15;;;1029:2;1008:24;1001:35;;;;-1:-1:-1;1016:6:37;146:921;-1:-1:-1;;;;;146:921:37:o;1072:556::-;1192:4;1221:2;1250;1239:9;1232:21;1282:6;1276:13;1325:6;1320:2;1309:9;1305:18;1298:34;1350:1;1360:140;1374:6;1371:1;1368:13;1360:140;;;1469:14;;;1465:23;;1459:30;1435:17;;;1454:2;1431:26;1424:66;1389:10;;1360:140;;;1364:3;1549:1;1544:2;1535:6;1524:9;1520:22;1516:31;1509:42;1619:2;1612;1608:7;1603:2;1595:6;1591:15;1587:29;1576:9;1572:45;1568:54;1560:62;;;;1072:556;;;;:::o;1633:127::-;1694:10;1689:3;1685:20;1682:1;1675:31;1725:4;1722:1;1715:15;1749:4;1746:1;1739:15;1765:217;1805:1;1831;1821:132;;1875:10;1870:3;1866:20;1863:1;1856:31;1910:4;1907:1;1900:15;1938:4;1935:1;1928:15;1821:132;-1:-1:-1;1967:9:37;;1765:217::o;1987:128::-;2054:9;;;2075:11;;;2072:37;;;2089:18;;:::i;:::-;1987:128;;;;:::o;2120:168::-;2193:9;;;2224;;2241:15;;;2235:22;;2221:37;2211:71;;2262:18;;:::i;2293:125::-;2358:9;;;2379:10;;;2376:36;;;2392:18;;:::i;2423:127::-;2484:10;2479:3;2475:20;2472:1;2465:31;2515:4;2512:1;2505:15;2539:4;2536:1;2529:15;2555:135;2594:3;2615:17;;;2612:43;;2635:18;;:::i;:::-;-1:-1:-1;2682:1:37;2671:13;;2555:135::o","linkReferences":{}},"methodIdentifiers":{"toHexString(bytes)":"c9372793"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"toHexString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"toHexString(bytes)\":{\"details\":\"converts bytes array to its ASCII hex string representation TODO: Definitely more efficient way to do this by processing multiple (16?) bytes at once but really a helper function for the tests, efficiency not key.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/murky/differential_testing/test/utils/Strings2.sol\":\"Strings2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":murky_differential_testing/=lib/murky/differential_testing/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":risc0/=lib/risc0-ethereum/contracts/src/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\"]},\"sources\":{\"lib/murky/differential_testing/test/utils/Strings2.sol\":{\"keccak256\":\"0xc43b3d6a65f5650390ff792866910b907e076a22ff06e4010da6441e67bd4c2e\",\"urls\":[\"bzz-raw://be432f1c83ecf7dade4ca1e0d9ce7b1a173e88df25d0261c1106bc2948e01544\",\"dweb:/ipfs/QmYqrSUUiWS5Z47yjKvbREDVBTah8uAPjQFTpEZErrV3oc\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"input","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toHexString","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"toHexString(bytes)":{"details":"converts bytes array to its ASCII hex string representation TODO: Definitely more efficient way to do this by processing multiple (16?) bytes at once but really a helper function for the tests, efficiency not key."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/murky/","murky_differential_testing/=lib/murky/differential_testing/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/","risc0-ethereum/=lib/risc0-ethereum/","risc0/=lib/risc0-ethereum/contracts/src/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/murky/differential_testing/test/utils/Strings2.sol":"Strings2"},"evmVersion":"paris","libraries":{}},"sources":{"lib/murky/differential_testing/test/utils/Strings2.sol":{"keccak256":"0xc43b3d6a65f5650390ff792866910b907e076a22ff06e4010da6441e67bd4c2e","urls":["bzz-raw://be432f1c83ecf7dade4ca1e0d9ce7b1a173e88df25d0261c1106bc2948e01544","dweb:/ipfs/QmYqrSUUiWS5Z47yjKvbREDVBTah8uAPjQFTpEZErrV3oc"],"license":null}},"version":1},"id":26}